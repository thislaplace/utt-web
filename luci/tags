!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"Failed to execute " .. (type(c.target) 	dispatcher.lua	/^		       "Failed to execute " .. (type(c.target) == "function" and "function" or c.target.type or "unknown") ..$/;"	f
AbstractSection.__init__	cbi.lua	/^function AbstractSection.__init__(self, map, sectiontype, ...)$/;"	f
AbstractSection.add_dynamic	cbi.lua	/^function AbstractSection.add_dynamic(self, field, optional)$/;"	f
AbstractSection.cfgvalue	cbi.lua	/^function AbstractSection.cfgvalue(self, section)$/;"	f
AbstractSection.create	cbi.lua	/^function AbstractSection.create(self, section)$/;"	f
AbstractSection.has_tabs	cbi.lua	/^function AbstractSection.has_tabs(self)$/;"	f
AbstractSection.option	cbi.lua	/^function AbstractSection.option(self, class, option, ...)$/;"	f
AbstractSection.parse_dynamic	cbi.lua	/^function AbstractSection.parse_dynamic(self, section)$/;"	f
AbstractSection.parse_optionals	cbi.lua	/^function AbstractSection.parse_optionals(self, section)$/;"	f
AbstractSection.push_events	cbi.lua	/^function AbstractSection.push_events(self)$/;"	f
AbstractSection.remove	cbi.lua	/^function AbstractSection.remove(self, section)$/;"	f
AbstractSection.render_tab	cbi.lua	/^function AbstractSection.render_tab(self, tab, ...)$/;"	f
AbstractSection.tab	cbi.lua	/^function AbstractSection.tab(self, tab, title, desc)$/;"	f
AbstractSection.taboption	cbi.lua	/^function AbstractSection.taboption(self, tab, ...)$/;"	f
AbstractValue.__init__	cbi.lua	/^function AbstractValue.__init__(self, map, section, option, ...)$/;"	f
AbstractValue.add_error	cbi.lua	/^function AbstractValue.add_error(self, section, type, msg)$/;"	f
AbstractValue.additional	cbi.lua	/^function AbstractValue.additional(self, value)$/;"	f
AbstractValue.cbid	cbi.lua	/^function AbstractValue.cbid(self, section)$/;"	f
AbstractValue.cfgvalue	cbi.lua	/^function AbstractValue.cfgvalue(self, section)$/;"	f
AbstractValue.depends	cbi.lua	/^function AbstractValue.depends(self, field, value)$/;"	f
AbstractValue.formcreated	cbi.lua	/^function AbstractValue.formcreated(self, section)$/;"	f
AbstractValue.formvalue	cbi.lua	/^function AbstractValue.formvalue(self, section)$/;"	f
AbstractValue.mandatory	cbi.lua	/^function AbstractValue.mandatory(self, value)$/;"	f
AbstractValue.parse	cbi.lua	/^function AbstractValue.parse(self, section, novld)$/;"	f
AbstractValue.prepare	cbi.lua	/^function AbstractValue.prepare(self)$/;"	f
AbstractValue.remove	cbi.lua	/^function AbstractValue.remove(self, section)$/;"	f
AbstractValue.render	cbi.lua	/^function AbstractValue.render(self, s, scope)$/;"	f
AbstractValue.validate	cbi.lua	/^function AbstractValue.validate(self, value)$/;"	f
AbstractValue.write	cbi.lua	/^function AbstractValue.write(self, section, value)$/;"	f
ActiveDecoder.__init__	json.lua	/^function ActiveDecoder.__init__(self, source, customnull)$/;"	f
ActiveDecoder.fetch	json.lua	/^function ActiveDecoder.fetch(self)$/;"	f
ActiveDecoder.get	json.lua	/^function ActiveDecoder.get(self)$/;"	f
Button.__init__	cbi.lua	/^function Button.__init__(self, ...)$/;"	f
Compound.__init__	cbi.lua	/^function Compound.__init__(self, ...)$/;"	f
Compound.parse	cbi.lua	/^function Compound.parse(self, ...)$/;"	f
Compound.populate_delegator	cbi.lua	/^function Compound.populate_delegator(self, delegator)$/;"	f
Cursor._affected	model/uci.lua	/^function Cursor._affected(self, configlist)$/;"	f
Cursor.apply	model/uci.lua	/^function Cursor.apply(self, configlist, command)$/;"	f
Cursor.delete_all	model/uci.lua	/^function Cursor.delete_all(self, config, stype, comparator)$/;"	f
Cursor.get_bool	model/uci.lua	/^function Cursor.get_bool(self, ...)$/;"	f
Cursor.get_first	model/uci.lua	/^function Cursor.get_first(self, conf, stype, opt, def)$/;"	f
Cursor.get_list	model/uci.lua	/^function Cursor.get_list(self, config, section, option)$/;"	f
Cursor.load	model/uci.lua	/^function Cursor.load(self, ...)$/;"	f
Cursor.section	model/uci.lua	/^function Cursor.section(self, config, type, name, values)$/;"	f
Cursor.set_list	model/uci.lua	/^function Cursor.set_list(self, config, section, option, value)$/;"	f
Cursor.substate	model/uci.lua	/^function Cursor.substate(self)$/;"	f
Cursor.tset	model/uci.lua	/^function Cursor.tset(self, config, section, values)$/;"	f
Cursor.unload	model/uci.lua	/^function Cursor.unload(self, ...)$/;"	f
Decoder.__init__	json.lua	/^function Decoder.__init__(self, customnull)$/;"	f
Decoder.dispatch	json.lua	/^function Decoder.dispatch(self, chunk, src_err, strict)$/;"	f
Decoder.fetch	json.lua	/^function Decoder.fetch(self)$/;"	f
Decoder.fetch_atleast	json.lua	/^function Decoder.fetch_atleast(self, chunk, bytes)$/;"	f
Decoder.fetch_until	json.lua	/^function Decoder.fetch_until(self, chunk, pattern)$/;"	f
Decoder.get	json.lua	/^function Decoder.get(self)$/;"	f
Decoder.parse_array	json.lua	/^function Decoder.parse_array(self, chunk)$/;"	f
Decoder.parse_delimiter	json.lua	/^function Decoder.parse_delimiter(self, chunk, delimiter)$/;"	f
Decoder.parse_escape	json.lua	/^function Decoder.parse_escape(self, chunk)$/;"	f
Decoder.parse_false	json.lua	/^function Decoder.parse_false(self, chunk)$/;"	f
Decoder.parse_literal	json.lua	/^function Decoder.parse_literal(self, chunk, literal, value)$/;"	f
Decoder.parse_null	json.lua	/^function Decoder.parse_null(self, chunk)$/;"	f
Decoder.parse_number	json.lua	/^function Decoder.parse_number(self, chunk)$/;"	f
Decoder.parse_object	json.lua	/^function Decoder.parse_object(self, chunk)$/;"	f
Decoder.parse_space	json.lua	/^function Decoder.parse_space(self, chunk)$/;"	f
Decoder.parse_string	json.lua	/^function Decoder.parse_string(self, chunk)$/;"	f
Decoder.parse_true	json.lua	/^function Decoder.parse_true(self, chunk)$/;"	f
Decoder.sink	json.lua	/^function Decoder.sink(self)$/;"	f
Delegator.__init__	cbi.lua	/^function Delegator.__init__(self, ...)$/;"	f
Delegator.add	cbi.lua	/^function Delegator.add(self, name, node)$/;"	f
Delegator.get	cbi.lua	/^function Delegator.get(self, name)$/;"	f
Delegator.get_active	cbi.lua	/^function Delegator.get_active(self)$/;"	f
Delegator.get_chain	cbi.lua	/^function Delegator.get_chain(self)$/;"	f
Delegator.get_next	cbi.lua	/^function Delegator.get_next(self, state)$/;"	f
Delegator.get_prev	cbi.lua	/^function Delegator.get_prev(self, state)$/;"	f
Delegator.insert_after	cbi.lua	/^function Delegator.insert_after(self, name, after)$/;"	f
Delegator.parse	cbi.lua	/^function Delegator.parse(self, ...)$/;"	f
Delegator.set	cbi.lua	/^function Delegator.set(self, name, node)$/;"	f
Delegator.set_route	cbi.lua	/^function Delegator.set_route(self, ...)$/;"	f
DummyValue.__init__	cbi.lua	/^function DummyValue.__init__(self, ...)$/;"	f
DummyValue.cfgvalue	cbi.lua	/^function DummyValue.cfgvalue(self, section)$/;"	f
DummyValue.parse	cbi.lua	/^function DummyValue.parse(self)$/;"	f
DynamicList.__init__	cbi.lua	/^function DynamicList.__init__(self, ...)$/;"	f
DynamicList.cfgvalue	cbi.lua	/^function DynamicList.cfgvalue(self, section)$/;"	f
DynamicList.formvalue	cbi.lua	/^function DynamicList.formvalue(self, section)$/;"	f
DynamicList.reset_values	cbi.lua	/^function DynamicList.reset_values(self)$/;"	f
DynamicList.value	cbi.lua	/^function DynamicList.value(self, key, val)$/;"	f
DynamicList.write	cbi.lua	/^function DynamicList.write(self, section, value)$/;"	f
Encoder.__init__	json.lua	/^function Encoder.__init__(self, data, buffersize, fastescape)$/;"	f
Encoder.dispatch	json.lua	/^function Encoder.dispatch(self, data, start)$/;"	f
Encoder.parse_bool	json.lua	/^function Encoder.parse_bool(self, obj)$/;"	f
Encoder.parse_iter	json.lua	/^function Encoder.parse_iter(self, obj)$/;"	f
Encoder.parse_nil	json.lua	/^function Encoder.parse_nil(self)$/;"	f
Encoder.parse_number	json.lua	/^function Encoder.parse_number(self, obj)$/;"	f
Encoder.parse_string	json.lua	/^function Encoder.parse_string(self, obj)$/;"	f
Encoder.put	json.lua	/^function Encoder.put(self, chunk)$/;"	f
Encoder.source	json.lua	/^function Encoder.source(self)$/;"	f
FileBrowser.__init__	cbi.lua	/^function FileBrowser.__init__(self, ...)$/;"	f
FileUpload.__init__	cbi.lua	/^function FileUpload.__init__(self, ...)$/;"	f
FileUpload.cfgvalue	cbi.lua	/^function FileUpload.cfgvalue(self, section)$/;"	f
FileUpload.formcreated	cbi.lua	/^function FileUpload.formcreated(self, section)$/;"	f
FileUpload.formvalue	cbi.lua	/^function FileUpload.formvalue(self, section)$/;"	f
FileUpload.remove	cbi.lua	/^function FileUpload.remove(self, section)$/;"	f
Flag.__init__	cbi.lua	/^function Flag.__init__(self, ...)$/;"	f
Flag.cfgvalue	cbi.lua	/^function Flag.cfgvalue(self, section)$/;"	f
Flag.parse	cbi.lua	/^function Flag.parse(self, section)$/;"	f
Form.__init__	cbi.lua	/^function Form.__init__(self, ...)$/;"	f
Hex	ip.lua	/^function Hex( hex, prefix, family, swap )$/;"	f
IPv4	ip.lua	/^function IPv4(address, netmask)$/;"	f
IPv6	ip.lua	/^function IPv6(address, netmask)$/;"	f
IptParser.__init__	sys/iptparser.lua	/^function IptParser.__init__( self, family )$/;"	f
IptParser._match_options	sys/iptparser.lua	/^function IptParser._match_options( self, o1, o2 )$/;"	f
IptParser._parse_addr	sys/iptparser.lua	/^function IptParser._parse_addr( self, addr )$/;"	f
IptParser._parse_rules	sys/iptparser.lua	/^function IptParser._parse_rules( self )$/;"	f
IptParser.chain	sys/iptparser.lua	/^function IptParser.chain( self, table, chain )$/;"	f
IptParser.chains	sys/iptparser.lua	/^function IptParser.chains( self, table )$/;"	f
IptParser.find	sys/iptparser.lua	/^function IptParser.find( self, args )$/;"	f
IptParser.is_custom_target	sys/iptparser.lua	/^function IptParser.is_custom_target( self, target )$/;"	f
IptParser.resync	sys/iptparser.lua	/^function IptParser.resync( self )$/;"	f
IptParser.tables	sys/iptparser.lua	/^function IptParser.tables( self )$/;"	f
ListValue.__init__	cbi.lua	/^function ListValue.__init__(self, ...)$/;"	f
ListValue.reset_values	cbi.lua	/^function ListValue.reset_values(self)$/;"	f
ListValue.validate	cbi.lua	/^function ListValue.validate(self, val)$/;"	f
ListValue.value	cbi.lua	/^function ListValue.value(self, key, val, ...)$/;"	f
Map.__init__	cbi.lua	/^function Map.__init__(self, config, ...)$/;"	f
Map.add	cbi.lua	/^function Map.add(self, sectiontype)$/;"	f
Map.chain	cbi.lua	/^function Map.chain(self, config)$/;"	f
Map.del	cbi.lua	/^function Map.del(self, section, option)$/;"	f
Map.formvalue	cbi.lua	/^function Map.formvalue(self, key)$/;"	f
Map.formvaluetable	cbi.lua	/^function Map.formvaluetable(self, key)$/;"	f
Map.get	cbi.lua	/^function Map.get(self, section, option)$/;"	f
Map.get_scheme	cbi.lua	/^function Map.get_scheme(self, sectiontype, option)$/;"	f
Map.parse	cbi.lua	/^function Map.parse(self, readinput, ...)$/;"	f
Map.render	cbi.lua	/^function Map.render(self, ...)$/;"	f
Map.section	cbi.lua	/^function Map.section(self, class, ...)$/;"	f
Map.set	cbi.lua	/^function Map.set(self, section, option, value)$/;"	f
Map.state_handler	cbi.lua	/^function Map.state_handler(self, state)$/;"	f
Map.submitstate	cbi.lua	/^function Map.submitstate(self)$/;"	f
MultiValue.__init__	cbi.lua	/^function MultiValue.__init__(self, ...)$/;"	f
MultiValue.render	cbi.lua	/^function MultiValue.render(self, ...)$/;"	f
MultiValue.reset_values	cbi.lua	/^function MultiValue.reset_values(self)$/;"	f
MultiValue.validate	cbi.lua	/^function MultiValue.validate(self, val)$/;"	f
MultiValue.value	cbi.lua	/^function MultiValue.value(self, key, val)$/;"	f
MultiValue.valuelist	cbi.lua	/^function MultiValue.valuelist(self, section)$/;"	f
NamedSection.__init__	cbi.lua	/^function NamedSection.__init__(self, map, section, stype, ...)$/;"	f
NamedSection.parse	cbi.lua	/^function NamedSection.parse(self, novld)$/;"	f
Node.__init__	cbi.lua	/^function Node.__init__(self, title, description)$/;"	f
Node._run_hook	cbi.lua	/^function Node._run_hook(self, hook)$/;"	f
Node._run_hooks	cbi.lua	/^function Node._run_hooks(self, ...)$/;"	f
Node.append	cbi.lua	/^function Node.append(self, obj)$/;"	f
Node.parse	cbi.lua	/^function Node.parse(self, ...)$/;"	f
Node.prepare	cbi.lua	/^function Node.prepare(self, ...)$/;"	f
Node.render	cbi.lua	/^function Node.render(self, scope)$/;"	f
Node.render_children	cbi.lua	/^function Node.render_children(self, ...)$/;"	f
Page.parse    	cbi.lua	/^Page.parse    = function() end$/;"	f
Request.__init__	http.lua	/^function Request.__init__(self, env, sourcein, sinkerr)$/;"	f
Request._parse_input	http.lua	/^function Request._parse_input(self)$/;"	f
Request.content	http.lua	/^function Request.content(self)$/;"	f
Request.formvalue	http.lua	/^function Request.formvalue(self, name, noparse)$/;"	f
Request.formvaluetable	http.lua	/^function Request.formvaluetable(self, prefix)$/;"	f
Request.getcookie	http.lua	/^function Request.getcookie(self, name)$/;"	f
Request.getenv	http.lua	/^function Request.getenv(self, name)$/;"	f
Request.setfilehandler	http.lua	/^function Request.setfilehandler(self, callback)$/;"	f
SimpleForm.__init__	cbi.lua	/^function SimpleForm.__init__(self, config, title, description, data)$/;"	f
SimpleForm.del	cbi.lua	/^function SimpleForm.del(self, section, option)$/;"	f
SimpleForm.field	cbi.lua	/^function SimpleForm.field(self, class, ...)$/;"	f
SimpleForm.get	cbi.lua	/^function SimpleForm.get(self, section, option)$/;"	f
SimpleForm.get_scheme	cbi.lua	/^function SimpleForm.get_scheme()$/;"	f
SimpleForm.parse	cbi.lua	/^function SimpleForm.parse(self, readinput, ...)$/;"	f
SimpleForm.render	cbi.lua	/^function SimpleForm.render(self, ...)$/;"	f
SimpleForm.section	cbi.lua	/^function SimpleForm.section(self, class, ...)$/;"	f
SimpleForm.set	cbi.lua	/^function SimpleForm.set(self, section, option, value)$/;"	f
SimpleForm.submitstate	cbi.lua	/^function SimpleForm.submitstate(self)$/;"	f
SimpleSection.__init__	cbi.lua	/^function SimpleSection.__init__(self, form, ...)$/;"	f
StaticList.__init__	cbi.lua	/^function StaticList.__init__(self, ...)$/;"	f
StaticList.validate	cbi.lua	/^function StaticList.validate(self, value)$/;"	f
Table.__init__	cbi.lua	/^function Table.__init__(self, form, data, ...)$/;"	f
Table.cfgsections	cbi.lua	/^function Table.cfgsections(self)$/;"	f
Table.parse	cbi.lua	/^function Table.parse(self, readinput)$/;"	f
Table.update	cbi.lua	/^function Table.update(self, data)$/;"	f
Template.__init__	cbi.lua	/^function Template.__init__(self, template)$/;"	f
Template.__init__	template.lua	/^function Template.__init__(self, name)	$/;"	f
Template.parse	cbi.lua	/^function Template.parse(self, readinput)$/;"	f
Template.render	cbi.lua	/^function Template.render(self)$/;"	f
Template.render	template.lua	/^function Template.render(self, scope)$/;"	f
TextValue.__init__	cbi.lua	/^function TextValue.__init__(self, ...)$/;"	f
TypedSection.__init__	cbi.lua	/^function TypedSection.__init__(self, map, type, ...)$/;"	f
TypedSection.cfgsections	cbi.lua	/^function TypedSection.cfgsections(self)$/;"	f
TypedSection.checkscope	cbi.lua	/^function TypedSection.checkscope(self, section)$/;"	f
TypedSection.depends	cbi.lua	/^function TypedSection.depends(self, option, value)$/;"	f
TypedSection.parse	cbi.lua	/^function TypedSection.parse(self, novld)$/;"	f
TypedSection.validate	cbi.lua	/^function TypedSection.validate(self, section)$/;"	f
Value.__init__	cbi.lua	/^function Value.__init__(self, ...)$/;"	f
Value.reset_values	cbi.lua	/^function Value.reset_values(self)$/;"	f
Value.value	cbi.lua	/^function Value.value(self, key, val)$/;"	f
['function'] 	json.lua	/^	['function'] = Encoder.parse_iter$/;"	f
_	dispatcher.lua	/^function _(text)$/;"	f
_M['and'] 	cbi/datatypes.lua	/^_M['and'] = function(v, ...)$/;"	f
_M['or'] 	cbi/datatypes.lua	/^_M['or'] = function(v, ...)$/;"	f
__appendval	http/protocol.lua	/^local function __appendval( tbl, key, chunk )$/;"	f
__array16	ip.lua	/^local function __array16( x, family )$/;"	f
__bless	ip.lua	/^local function __bless(x)$/;"	f
__chrdec	http/protocol.lua	/^	local function __chrdec( hex )$/;"	f
__chrenc	http/protocol.lua	/^	local function __chrenc( chr )$/;"	f
__finishval	http/protocol.lua	/^local function __finishval( tbl, key, handler )$/;"	f
__index 	config.lua	/^					__index = function(tbl, key)$/;"	f
__index 	sys.lua	/^			__index = function(t, k)$/;"	f
__index 	sys/zoneinfo.lua	/^	__index = function(t, k)$/;"	f
__index 	util.lua	/^	__index = function(self, key)$/;"	f
__initval	http/protocol.lua	/^local function __initval( tbl, key )$/;"	f
__mask16	ip.lua	/^local function __mask16(bits)$/;"	f
__maxlen	ip.lua	/^local function __maxlen(family)$/;"	f
__newindex 	util.lua	/^	__newindex = function(self, key, value)$/;"	f
__not16	ip.lua	/^local function __not16(bits)$/;"	f
__sublen	ip.lua	/^local function __sublen(family)$/;"	f
_action	model/ipkg.lua	/^local function _action(cmd, ...)$/;"	f
_add	sys.lua	/^	local function _add(i, ...)$/;"	f
_append	model/network.lua	/^function _append(c, s, o, a)$/;"	f
_arcombine	dispatcher.lua	/^local function _arcombine(self, ...)$/;"	f
_call	dispatcher.lua	/^local function _call(self, ...)$/;"	f
_cbi	dispatcher.lua	/^local function _cbi(self, ...)$/;"	f
_checkid	sauth.lua	/^local function _checkid(id)$/;"	f
_create_node	dispatcher.lua	/^function _create_node(path)$/;"	f
_encode_filename	ccache.lua	/^	local function _encode_filename(name)$/;"	f
_filter	model/network.lua	/^function _filter(c, s, o, r)$/;"	f
_firstchild	dispatcher.lua	/^function _firstchild()$/;"	f
_form	dispatcher.lua	/^local function _form(self, ...)$/;"	f
_get	model/firewall.lua	/^function _get(c, s, o)$/;"	f
_get	model/network.lua	/^function _get(c, s, o)$/;"	f
_iface_ignore	model/network.lua	/^function _iface_ignore(x)$/;"	f
_iface_virtual	model/network.lua	/^function _iface_virtual(x)$/;"	f
_ifattr	dispatcher.lua	/^		local function _ifattr(cond, key, val)$/;"	f
_instantiate	util.lua	/^local function _instantiate(class, ...)$/;"	f
_list	model/ipkg.lua	/^function _list(action, pat, cb)$/;"	f
_load_sane	ccache.lua	/^	local function _load_sane(file)$/;"	f
_lookup	model/ipkg.lua	/^local function _lookup(act, pkg)$/;"	f
_nethints	sys.lua	/^local function _nethints(what, callback)$/;"	f
_parse_mixed_record	sys.lua	/^function _parse_mixed_record(cnt, delimiter)$/;"	f
_parselist	model/ipkg.lua	/^local function _parselist(rawdata)$/;"	f
_read	sauth.lua	/^local function _read(id)$/;"	f
_resolve_deps	model/uci.lua	/^	local function _resolve_deps(name)$/;"	f
_resolve_path	dispatcher.lua	/^	local function _resolve_path(path)$/;"	f
_serialize_table	util.lua	/^function _serialize_table(t, seen)$/;"	f
_set	model/firewall.lua	/^function _set(c, s, o, v)$/;"	f
_set	model/network.lua	/^function _set(c, s, o, v)$/;"	f
_sortiter	util.lua	/^function _sortiter( t, f )$/;"	f
_stror	model/network.lua	/^function _stror(s1, s2)$/;"	f
_valid_id	model/firewall.lua	/^function _valid_id(x)$/;"	f
_wifi_iface	model/network.lua	/^function _wifi_iface(x)$/;"	f
_wifi_lookup	model/network.lua	/^function _wifi_lookup(ifn)$/;"	f
_write	sauth.lua	/^local function _write(id, data)$/;"	f
_write_sane	ccache.lua	/^	local function _write_sane(file, func)$/;"	f
action_apply	controller/admin/uci.lua	/^function action_apply()$/;"	f
action_bandwidth	controller/admin/status.lua	/^function action_bandwidth(iface)$/;"	f
action_changes	controller/admin/uci.lua	/^function action_changes()$/;"	f
action_clock_status	controller/admin/system.lua	/^function action_clock_status()$/;"	f
action_connections	controller/admin/status.lua	/^function action_connections()$/;"	f
action_dmesg	controller/admin/status.lua	/^function action_dmesg()$/;"	f
action_flashops	controller/admin/system.lua	/^function action_flashops()$/;"	f
action_iptables	controller/admin/status.lua	/^function action_iptables()$/;"	f
action_load	controller/admin/status.lua	/^function action_load()$/;"	f
action_logout	controller/admin/index.lua	/^function action_logout()$/;"	f
action_nameinfo	controller/admin/status.lua	/^function action_nameinfo(...)$/;"	f
action_packages	controller/admin/system.lua	/^function action_packages()$/;"	f
action_passwd	controller/admin/system.lua	/^function action_passwd()$/;"	f
action_reboot	controller/admin/system.lua	/^function action_reboot()$/;"	f
action_restart	controller/admin/servicectl.lua	/^function action_restart(args)$/;"	f
action_revert	controller/admin/uci.lua	/^function action_revert()$/;"	f
action_status	controller/admin/servicectl.lua	/^function action_status()$/;"	f
action_syslog	controller/admin/status.lua	/^function action_syslog()$/;"	f
action_wireless	controller/admin/status.lua	/^function action_wireless(iface)$/;"	f
add_network	model/network.lua	/^function add_network(self, n, options)$/;"	f
add_wifinet	model/network.lua	/^function add_wifinet(self, net, options)$/;"	f
add_zone	model/firewall.lua	/^function add_zone(self, n)$/;"	f
alias	dispatcher.lua	/^function alias(...)$/;"	f
append	util.lua	/^function append(src, ...)$/;"	f
arcombine	dispatcher.lua	/^function arcombine(trg1, trg2)$/;"	f
assert(type(func) 	dispatcher.lua	/^	assert(type(func) == "function",$/;"	f
assert(type(idx) 	dispatcher.lua	/^		assert(type(idx) == "function",$/;"	f
assign	dispatcher.lua	/^function assign(path, clone, title, order)$/;"	f
atm.create 	model/cbi/admin_network/network.lua	/^	atm.create = function(self, section)$/;"	f
attr        	dispatcher.lua	/^		   attr        = function(...) return _ifattr(true, ...) end;$/;"	f
authen 	dispatcher.lua	/^				authen = function() return eu end$/;"	f
authenticator.htmlauth	dispatcher.lua	/^function authenticator.htmlauth(validator, accs, default)$/;"	f
avail.cfgvalue	model/cbi/admin_system/fstab.lua	/^function avail.cfgvalue(self, section)$/;"	f
backup_ifnames	model/cbi/admin_network/ifaces.lua	/^local function backup_ifnames(is_bridge)$/;"	f
bandwidth_label	view/admin_status/bandwidth.htm	/^	function bandwidth_label(bytes, br)$/;"	f
bigendian	util.lua	/^function bigendian()$/;"	f
bool	cbi/datatypes.lua	/^function bool(val)$/;"	f
build_querystring	http.lua	/^function build_querystring(q)$/;"	f
build_url	dispatcher.lua	/^function build_url(...)$/;"	f
byte_format	tools/webadmin.lua	/^function byte_format(byte)$/;"	f
c.cfgvalue 	model/cbi/admin_network/wifi.lua	/^c.cfgvalue = function(self,section)$/;"	f
c.cfgvalue 	model/cbi/admin_system/backupfiles.lua	/^	c.cfgvalue = function(self, section)$/;"	f
c.write 	model/cbi/admin_network/wifi.lua	/^c.write = function(self,section,value)$/;"	f
c.write 	model/cbi/admin_system/backupfiles.lua	/^	c.write = function(self, section, value)$/;"	f
cache_enable	ccache.lua	/^function cache_enable(cachepath, mode)$/;"	f
cache_ondemand	ccache.lua	/^function cache_ondemand(...)$/;"	f
call	dispatcher.lua	/^function call(name, ...)$/;"	f
call	sys.lua	/^function call(...)$/;"	f
callback	view/cbi/filebrowser.htm	/^		function callback(path) {$/;"	f
cbi	dispatcher.lua	/^function cbi(model, config)$/;"	f
cbi_add_knownips	tools/webadmin.lua	/^function cbi_add_knownips(field)$/;"	f
cbi_add_networks	tools/webadmin.lua	/^function cbi_add_networks(field)$/;"	f
cidr.add	ip.lua	/^function cidr.add( self, amount, inplace )$/;"	f
cidr.broadcast	ip.lua	/^function cidr.broadcast( self )$/;"	f
cidr.contains	ip.lua	/^function cidr.contains( self, addr )$/;"	f
cidr.equal	ip.lua	/^function cidr.equal( self, addr )$/;"	f
cidr.higher	ip.lua	/^function cidr.higher( self, addr )$/;"	f
cidr.host	ip.lua	/^function cidr.host( self )$/;"	f
cidr.is4	ip.lua	/^function cidr.is4( self )$/;"	f
cidr.is4linklocal	ip.lua	/^function cidr.is4linklocal( self )$/;"	f
cidr.is4rfc1918	ip.lua	/^function cidr.is4rfc1918( self )$/;"	f
cidr.is6	ip.lua	/^function cidr.is6( self )$/;"	f
cidr.is6linklocal	ip.lua	/^function cidr.is6linklocal( self )$/;"	f
cidr.lower	ip.lua	/^function cidr.lower( self, addr )$/;"	f
cidr.mask	ip.lua	/^function cidr.mask( self, bits )$/;"	f
cidr.maxhost	ip.lua	/^function cidr.maxhost( self )$/;"	f
cidr.minhost	ip.lua	/^function cidr.minhost( self )$/;"	f
cidr.network	ip.lua	/^function cidr.network( self, bits )$/;"	f
cidr.prefix	ip.lua	/^function cidr.prefix( self, mask )$/;"	f
cidr.string	ip.lua	/^function cidr.string( self )$/;"	f
cidr.sub	ip.lua	/^function cidr.sub( self, amount, inplace )$/;"	f
cipher.cfgvalue	model/cbi/admin_network/wifi.lua	/^function cipher.cfgvalue(self, section)$/;"	f
cipher.write	model/cbi/admin_network/wifi.lua	/^function cipher.write(self, section)$/;"	f
ck.cfgvalue 	model/cbi/admin_system/fstab.lua	/^ck.cfgvalue = function(self, section)$/;"	f
class	util.lua	/^function class(base)$/;"	f
clear	i18n.lua	/^function clear()$/;"	f
clone	util.lua	/^function clone(object, deep)$/;"	f
close	http.lua	/^function close()$/;"	f
cmatch	util.lua	/^function cmatch(str, pat)$/;"	f
code:sub	util.lua	/^	return code:sub(1,12) .. strip_function(code:sub(13,-1))$/;"	f
combine	util.lua	/^function combine(...)$/;"	f
commit	model/firewall.lua	/^function commit(self, ...)$/;"	f
commit	model/network.lua	/^function commit(self, ...)$/;"	f
comparator 	model/uci.lua	/^		comparator = function(section)$/;"	f
compare	http/protocol/date.lua	/^function compare(d1, d2)$/;"	f
compile_datatype	cbi.lua	/^function compile_datatype(code)$/;"	f
contains	util.lua	/^function contains(table, value)$/;"	f
content	http.lua	/^function content()$/;"	f
content	view/admin_network/diagnostics.htm	/^		<h2><a id="content" name="content"><%:Diagnostics%><\/a><\/h2>$/;"	a
content	view/admin_network/wifi_join.htm	/^<h2><a id="content" name="content"><%:Join Network: Wireless Scan%><\/a><\/h2>$/;"	a
content	view/admin_network/wifi_overview.htm	/^	<h2><a id="content" name="content"><%:Associated Stations%><\/a><\/h2>$/;"	a
content	view/admin_network/wifi_overview.htm	/^<h2><a id="content" name="content"><%:Wireless Overview%><\/a><\/h2>$/;"	a
content	view/admin_status/bandwidth.htm	/^<h2><a id="content" name="content"><%:Realtime Traffic%><\/a><\/h2>$/;"	a
content	view/admin_status/connections.htm	/^<h2><a id="content" name="content"><%:Realtime Connections%><\/a><\/h2>$/;"	a
content	view/admin_status/dmesg.htm	/^<h2><a id="content" name="content"><%:Kernel Log%><\/a><\/h2>$/;"	a
content	view/admin_status/index.htm	/^<h2><a id="content" name="content"><%:Status%><\/a><\/h2>$/;"	a
content	view/admin_status/iptables.htm	/^<h2><a id="content" name="content"><%:Firewall Status%><\/a><\/h2>$/;"	a
content	view/admin_status/load.htm	/^<h2><a id="content" name="content"><%:Realtime Load%><\/a><\/h2>$/;"	a
content	view/admin_status/routes.htm	/^	<h2><a id="content" name="content"><%:Routes%><\/a><\/h2>$/;"	a
content	view/admin_status/syslog.htm	/^<h2><a id="content" name="content"><%:System Log%><\/a><\/h2>$/;"	a
content	view/admin_status/wireless.htm	/^<h2><a id="content" name="content"><%:Realtime Wireless%><\/a><\/h2>$/;"	a
content	view/admin_system/applyreboot.htm	/^				<h2><a id="content" name="content"><%:System%> - <% if title then %><%=title%><% else %><%:Rebooting...%><% end %><\/a><\/h2>$/;"	a
content	view/admin_system/flashops.htm	/^<h2><a id="content" name="content"><%:Flash operations%><\/a><\/h2>$/;"	a
content	view/admin_system/packages.htm	/^<h2><a id="content" name="content"><%:Software%><\/a><\/h2>$/;"	a
content	view/admin_system/reboot.htm	/^<h2><a id="content" name="content"><%:System%><\/a><\/h2>$/;"	a
content	view/admin_system/upgrade.htm	/^<h2><a id="content" name="content"><%:Flash Firmware%> - <%:Verify%><\/a><\/h2>$/;"	a
content	view/admin_uci/apply.htm	/^<h2><a id="content" name="content"><%:Configuration%> \/ <%:Apply%><\/a><\/h2>$/;"	a
content	view/admin_uci/changes.htm	/^<h2><a id="content" name="content"><%:Configuration%> \/ <%:Changes%><\/a><\/h2>$/;"	a
content	view/admin_uci/revert.htm	/^<h2><a id="content" name="content"><%:Configuration%> \/ <%:Revert%><\/a><\/h2>$/;"	a
content	view/cbi/map.htm	/^	<% if self.title and #self.title > 0 then %><h2><a id="content" name="content"><%=self.title%><\/a><\/h2><% end %>$/;"	a
content	view/cbi/simpleform.htm	/^		<% if self.title and #self.title > 0 then %><h2><a id="content" name="content"><%=self.title%><\/a><\/h2><% end %>$/;"	a
content	view/error404.htm	/^<h2><a id="content" name="content">404 <%:Not Found%><\/a><\/h2>$/;"	a
content	view/error500.htm	/^<h2><a id="content" name="content">500 <%:Internal Server Error%><\/a><\/h2>$/;"	a
content	view/sysauth.htm	/^		<h2><a id="content" name="content"><%:Authorization Required%><\/a><\/h2>$/;"	a
copcall	util.lua	/^function copcall(f, ...)$/;"	f
copcall_id	util.lua	/^local function copcall_id(trace, ...)$/;"	f
coxpcall	util.lua	/^function coxpcall(f, err, ...)$/;"	f
createindex	dispatcher.lua	/^function createindex()$/;"	f
createindex_fastindex	dispatcher.lua	/^function createindex_fastindex(path, suffixes)$/;"	f
createindex_plain	dispatcher.lua	/^function createindex_plain(path, suffixes)$/;"	f
createtree	dispatcher.lua	/^function createtree()$/;"	f
cursor_state	model/uci.lua	/^function cursor_state()$/;"	f
d.cfgvalue 	model/cbi/admin_system/backupfiles.lua	/^	d.cfgvalue = function(s)$/;"	f
datasource.del	cbi.lua	/^	function datasource.del(...)$/;"	f
datasource.get	cbi.lua	/^	function datasource.get(self, section, option)$/;"	f
datasource.get_scheme	cbi.lua	/^	function datasource.get_scheme()$/;"	f
datasource.submitstate	cbi.lua	/^	function datasource.submitstate(self)$/;"	f
date_format	tools/webadmin.lua	/^function date_format(secs)$/;"	f
decode	json.lua	/^function decode(json, ...)$/;"	f
defaults.__init__	model/firewall.lua	/^function defaults.__init__(self)$/;"	f
defaults.drop_invalid	model/firewall.lua	/^function defaults.drop_invalid(self)$/;"	f
defaults.forward	model/firewall.lua	/^function defaults.forward(self)$/;"	f
defaults.get	model/firewall.lua	/^function defaults.get(self, opt)$/;"	f
defaults.input	model/firewall.lua	/^function defaults.input(self)$/;"	f
defaults.output	model/firewall.lua	/^function defaults.output(self)$/;"	f
defaults.set	model/firewall.lua	/^function defaults.set(self, opt, val)$/;"	f
defaults.syn_flood	model/firewall.lua	/^function defaults.syn_flood(self)$/;"	f
del_network	model/firewall.lua	/^function del_network(self, net)$/;"	f
del_network	model/network.lua	/^function del_network(self, n)$/;"	f
del_wifinet	model/network.lua	/^function del_wifinet(self, net)$/;"	f
del_zone	model/firewall.lua	/^function del_zone(self, n)$/;"	f
dest.cfgvalue	model/cbi/firewall/forwards.lua	/^function dest.cfgvalue(self, s)$/;"	f
dev.cfgvalue	model/cbi/admin_system/leds.lua	/^function dev.cfgvalue(self, section)$/;"	f
dev.cfgvalue 	model/cbi/admin_system/fstab.lua	/^dev.cfgvalue = function(self, section)$/;"	f
dev.remove	model/cbi/admin_system/leds.lua	/^function dev.remove(self, section)$/;"	f
dev.write	model/cbi/admin_system/leds.lua	/^function dev.write(self, section, value)$/;"	f
device	cbi/datatypes.lua	/^function device( val, seen )$/;"	f
dhcp6_leases	tools/status.lua	/^function dhcp6_leases()$/;"	f
dhcp_leases	tools/status.lua	/^function dhcp_leases()$/;"	f
dhcp_leases_common	tools/status.lua	/^local function dhcp_leases_common(family)$/;"	f
diag_command	controller/admin/network.lua	/^function diag_command(cmd, addr)$/;"	f
diag_nslookup	controller/admin/network.lua	/^function diag_nslookup(addr)$/;"	f
diag_ping	controller/admin/network.lua	/^function diag_ping(addr)$/;"	f
diag_ping6	controller/admin/network.lua	/^function diag_ping6(addr)$/;"	f
diag_traceroute	controller/admin/network.lua	/^function diag_traceroute(addr)$/;"	f
diag_traceroute6	controller/admin/network.lua	/^function diag_traceroute6(addr)$/;"	f
dir	fs.lua	/^function dir(...)$/;"	f
directory	cbi/datatypes.lua	/^function directory( val, seen )$/;"	f
dispatch	dispatcher.lua	/^function dispatch(request)$/;"	f
dmesg	sys.lua	/^function dmesg()$/;"	f
dtable	util.lua	/^function dtable()$/;"	f
dumptable	util.lua	/^function dumptable(t, maxdepth, i, seen)$/;"	f
e.render 	model/cbi/admin_system/startup.lua	/^e.render = function(self, section, scope)$/;"	f
e.write 	model/cbi/admin_system/startup.lua	/^e.write = function(self, section)$/;"	f
elseif type(datatypes[label]) 	cbi.lua	/^					elseif type(datatypes[label]) == "function" then$/;"	f
elseif type(val) 	util.lua	/^	elseif type(val) == "function" then$/;"	f
empty	ltn12.lua	/^local function empty()$/;"	f
encode	json.lua	/^function encode(obj, ...)$/;"	f
encr.cfgvalue	model/cbi/admin_network/wifi.lua	/^function encr.cfgvalue(self, section)$/;"	f
encr.write	model/cbi/admin_network/wifi.lua	/^function encr.write(self, section, value)$/;"	f
entry	dispatcher.lua	/^function entry(path, target, title, order)$/;"	f
error404	dispatcher.lua	/^function error404(message)$/;"	f
error500	dispatcher.lua	/^function error500(message)$/;"	f
exec	util.lua	/^function exec(command)$/;"	f
execi	util.lua	/^function execi(command)$/;"	f
execl	util.lua	/^function execl(command)$/;"	f
export      	dispatcher.lua	/^		   export      = function(k, v) if tpl.context.viewns[k] == nil then tpl.context.viewns[k] = v end end;$/;"	f
f.handle	model/cbi/admin_system/crontab.lua	/^function f.handle(self, state, data)$/;"	f
f.handle	model/cbi/admin_system/ipkg.lua	/^function f.handle(self, state, data)$/;"	f
f.handle	model/cbi/admin_system/startup.lua	/^function f.handle(self, state, data)$/;"	f
fam.cfgvalue	model/cbi/admin_network/proto_ahcp.lua	/^function fam.cfgvalue(self, section)$/;"	f
fam.remove	model/cbi/admin_network/proto_ahcp.lua	/^function fam.remove(self, section)$/;"	f
fam.write	model/cbi/admin_network/proto_ahcp.lua	/^function fam.write(self, section, value)$/;"	f
file	cbi/datatypes.lua	/^function file( val, seen )$/;"	f
filter.chain	ltn12.lua	/^function filter.chain(...)$/;"	f
filter.cycle	ltn12.lua	/^function filter.cycle(low, ctx, extra)$/;"	f
find	model/ipkg.lua	/^function find(pat, cb)$/;"	f
firewall_find_zone	tools/webadmin.lua	/^function firewall_find_zone(name)$/;"	f
firstchild	dispatcher.lua	/^function firstchild()$/;"	f
float	cbi/datatypes.lua	/^function float(val)$/;"	f
fmt_icmp_type	tools/firewall.lua	/^function fmt_icmp_type(x)$/;"	f
fmt_ip	tools/firewall.lua	/^function fmt_ip(x, d)$/;"	f
fmt_limit	tools/firewall.lua	/^function fmt_limit(limit, burst)$/;"	f
fmt_mac	tools/firewall.lua	/^function fmt_mac(x)$/;"	f
fmt_neg	tools/firewall.lua	/^function fmt_neg(x)$/;"	f
fmt_port	tools/firewall.lua	/^function fmt_port(x, d)$/;"	f
fmt_proto	tools/firewall.lua	/^function fmt_proto(x, icmp_types)$/;"	f
fmt_target	tools/firewall.lua	/^function fmt_target(x, dest)$/;"	f
fmt_zone	tools/firewall.lua	/^function fmt_zone(x, d)$/;"	f
fork_exec	controller/admin/system.lua	/^function fork_exec(command)$/;"	f
form	dispatcher.lua	/^function form(model)$/;"	f
format_wifi_encryption	view/admin_network/wifi_join.htm	/^	function format_wifi_encryption(info)$/;"	f
formvalue	http.lua	/^function formvalue(name, noparse)$/;"	f
formvaluetable	http.lua	/^function formvaluetable(prefix)$/;"	f
forward_proto_txt	model/cbi/firewall/forwards.lua	/^local function forward_proto_txt(self, s)$/;"	f
forward_src_txt	model/cbi/firewall/forwards.lua	/^local function forward_src_txt(self, s)$/;"	f
forward_via_txt	model/cbi/firewall/forwards.lua	/^local function forward_via_txt(self, s)$/;"	f
forwarding.__init__	model/firewall.lua	/^function forwarding.__init__(self, f)$/;"	f
forwarding.dest	model/firewall.lua	/^function forwarding.dest(self)$/;"	f
forwarding.dest_zone	model/firewall.lua	/^function forwarding.dest_zone(self)$/;"	f
forwarding.src	model/firewall.lua	/^function forwarding.src(self)$/;"	f
forwarding.src_zone	model/firewall.lua	/^function forwarding.src_zone(self)$/;"	f
fs.cfgvalue 	model/cbi/admin_system/fstab.lua	/^fs.cfgvalue = function(self, section)$/;"	f
function(s) return (s.interface 	model/network.lua	/^			function(s) return (s.interface == n) end)$/;"	f
function(s) wfd[#wfd+1] 	model/network.lua	/^		function(s) wfd[#wfd+1] = s['.name'] end)$/;"	f
fwzone.cfgvalue	model/cbi/admin_network/ifaces.lua	/^	function fwzone.cfgvalue(self, section)$/;"	f
fwzone.cfgvalue	model/cbi/admin_network/wifi_add.lua	/^	function fwzone.cfgvalue(self, section)$/;"	f
fwzone.write	model/cbi/admin_network/ifaces.lua	/^	function fwzone.write(self, section, value)$/;"	f
get	dispatcher.lua	/^function get(...)$/;"	f
get_bytecode	util.lua	/^function get_bytecode(val)$/;"	f
get_defaults	model/firewall.lua	/^function get_defaults()$/;"	f
get_interface	model/network.lua	/^function get_interface(self, i)$/;"	f
get_interfaces	model/network.lua	/^function get_interfaces(self)$/;"	f
get_network	model/network.lua	/^function get_network(self, n)$/;"	f
get_networks	model/network.lua	/^function get_networks(self)$/;"	f
get_protocol	model/network.lua	/^function get_protocol(self, protoname, netname)$/;"	f
get_protocols	model/network.lua	/^function get_protocols(self)$/;"	f
get_status_by_address	model/network.lua	/^function get_status_by_address(self, addr)$/;"	f
get_status_by_route	model/network.lua	/^function get_status_by_route(self, addr, mask)$/;"	f
get_wan6dev	model/network.lua	/^function get_wan6dev(self)$/;"	f
get_wan6net	model/network.lua	/^function get_wan6net(self)$/;"	f
get_wandev	model/network.lua	/^function get_wandev(self)$/;"	f
get_wannet	model/network.lua	/^function get_wannet(self)$/;"	f
get_wifidev	model/network.lua	/^function get_wifidev(self, dev)$/;"	f
get_wifidevs	model/network.lua	/^function get_wifidevs(self)$/;"	f
get_wifinet	model/network.lua	/^function get_wifinet(self, net)$/;"	f
get_zone	model/firewall.lua	/^function get_zone(self, n)$/;"	f
get_zone_by_network	model/firewall.lua	/^function get_zone_by_network(self, net)$/;"	f
get_zones	model/firewall.lua	/^function get_zones(self)$/;"	f
getcookie	http.lua	/^function getcookie(name)$/;"	f
getenv	http.lua	/^function getenv(name)$/;"	f
getmetatable("").__mod 	util.lua	/^getmetatable("").__mod = function(a, b)$/;"	f
glob	fs.lua	/^function glob(...)$/;"	f
guess_wifi_hw	view/admin_network/wifi_overview.htm	/^	function guess_wifi_hw(dev)$/;"	f
guess_wifi_signal	view/admin_network/wifi_join.htm	/^	function guess_wifi_signal(info)$/;"	f
handleReturnValue	util.lua	/^function handleReturnValue(err, co, status, ...)$/;"	f
has_ipv6	model/network.lua	/^function has_ipv6(self)$/;"	f
header	http.lua	/^function header(key, value)$/;"	f
header_source	http/protocol.lua	/^function header_source( sock )$/;"	f
helper 	model/uci.lua	/^	local function helper (section)$/;"	f
host	cbi/datatypes.lua	/^function host(val)$/;"	f
hostname	cbi/datatypes.lua	/^function hostname(val)$/;"	f
hostname	sys.lua	/^function hostname(newname)$/;"	f
htonl	ip.lua	/^function htonl(x)$/;"	f
htons	ip.lua	/^function htons(x)$/;"	f
httpdispatch	dispatcher.lua	/^function httpdispatch(request, prefix)$/;"	f
httpget	sys.lua	/^function httpget(url, stream, target)$/;"	f
hup.write	model/cbi/admin_status/processes.lua	/^function hup.write(self, section)$/;"	f
if c and (c.index or type(target) 	dispatcher.lua	/^	if c and (c.index or type(target) == "function") then$/;"	f
if c and type(c[1]) 	cbi.lua	/^			if c and type(c[1]) == "function" then$/;"	f
if type(c.target) 	dispatcher.lua	/^		if type(c.target) == "function" then$/;"	f
if type(f) ~	cbi/datatypes.lua	/^		if type(f) ~= "function" then$/;"	f
if type(filecb) 	http/protocol.lua	/^		if type(filecb) == "function" then$/;"	f
if type(modcons) 	ccache.lua	/^		if type(modcons) == "function" then$/;"	f
if type(rawdata) ~	model/ipkg.lua	/^	if type(rawdata) ~= "function" then$/;"	f
if type(self.active) ~	cbi.lua	/^		if type(self.active) ~= "function" then$/;"	f
if type(self.active) ~	cbi.lua	/^	if type(self.active) ~= "function" then$/;"	f
if type(self.commit_handler) 	cbi.lua	/^		if type(self.commit_handler) == "function" then$/;"	f
if type(self.value) 	cbi.lua	/^		if type(self.value) == "function" then$/;"	f
if type(self[f]) 	cbi.lua	/^		if type(self[f]) == "function" then$/;"	f
if type(self[hook]) 	cbi.lua	/^	if type(self[hook]) == "function" then$/;"	f
if type(stack[#stack-1]) ~	cbi.lua	/^				if type(stack[#stack-1]) ~= "function" then$/;"	f
if type(subvalidator) ~	cbi/datatypes.lua	/^	if type(subvalidator) ~= "function" then$/;"	f
if type(target) 	dispatcher.lua	/^	if type(target) == "function" then$/;"	f
if type(val) 	util.lua	/^	if type(val) == "function" then$/;"	f
if_match	http/protocol/conditionals.lua	/^function if_match( req, stat )$/;"	f
if_modified_since	http/protocol/conditionals.lua	/^function if_modified_since( req, stat )$/;"	f
if_none_match	http/protocol/conditionals.lua	/^function if_none_match( req, stat )$/;"	f
if_range	http/protocol/conditionals.lua	/^function if_range( req, stat )$/;"	f
if_unmodified_since	http/protocol/conditionals.lua	/^function if_unmodified_since( req, stat )$/;"	f
iface_delete	controller/admin/network.lua	/^function iface_delete(iface)$/;"	f
iface_get_network	tools/webadmin.lua	/^function iface_get_network(iface)$/;"	f
iface_reconnect	controller/admin/network.lua	/^function iface_reconnect(iface)$/;"	f
iface_shutdown	controller/admin/network.lua	/^function iface_shutdown(iface)$/;"	f
iface_shutdown	view/admin_network/iface_overview.htm	/^	function iface_shutdown(id, reconnect) {$/;"	f
iface_status	controller/admin/network.lua	/^function iface_status(ifaces)$/;"	f
ifattr      	dispatcher.lua	/^		   ifattr      = function(...) return _ifattr(...) end;$/;"	f
ifname_single.cfgvalue	model/cbi/admin_network/ifaces.lua	/^	function ifname_single.cfgvalue(self, s)$/;"	f
ifname_single.write	model/cbi/admin_network/ifaces.lua	/^	function ifname_single.write(self, s, val)$/;"	f
ifnameof	model/network.lua	/^function ifnameof(self, x)$/;"	f
ignore_interface	model/network.lua	/^function ignore_interface(self, x)$/;"	f
image_checksum	controller/admin/system.lua	/^	local function image_checksum()$/;"	f
image_supported	controller/admin/system.lua	/^	local function image_supported()$/;"	f
imatch	util.lua	/^function imatch(v)$/;"	f
include     	dispatcher.lua	/^		   include     = function(name) tpl.Template(name):render(getfenv(2)) end;$/;"	f
index	controller/admin/filebrowser.lua	/^function index()$/;"	f
index	controller/admin/index.lua	/^function index()$/;"	f
index	controller/admin/network.lua	/^function index()$/;"	f
index	controller/admin/servicectl.lua	/^function index()$/;"	f
index	controller/admin/status.lua	/^function index()$/;"	f
index	controller/admin/system.lua	/^function index()$/;"	f
index	controller/admin/uci.lua	/^function index()$/;"	f
index	controller/firewall.lua	/^function index()$/;"	f
info	model/ipkg.lua	/^function info(pkg)$/;"	f
init	model/firewall.lua	/^function init(cursor)$/;"	f
init	model/network.lua	/^function init(cursor)$/;"	f
init.disable	sys.lua	/^function init.disable(name)$/;"	f
init.enable	sys.lua	/^function init.enable(name)$/;"	f
init.enabled	sys.lua	/^function init.enabled(name)$/;"	f
init.index	sys.lua	/^function init.index(name)$/;"	f
init.names	sys.lua	/^function init.names()$/;"	f
init.start	sys.lua	/^function init.start(name)$/;"	f
init.stop	sys.lua	/^function init.stop(name)$/;"	f
init_action	sys.lua	/^local function init_action(action, name)$/;"	f
inp.cfgvalue	model/cbi/firewall/zone-details.lua	/^function inp.cfgvalue(self, section)$/;"	f
inp.formvalue	model/cbi/firewall/zone-details.lua	/^function inp.formvalue(self, section)$/;"	f
inp.write	model/cbi/firewall/zone-details.lua	/^function inp.write(self, section, value)$/;"	f
install	model/ipkg.lua	/^function install(...)$/;"	f
installed	model/ipkg.lua	/^function installed(pkg)$/;"	f
instanceof	util.lua	/^function instanceof(object, class)$/;"	f
integer	cbi/datatypes.lua	/^function integer(val)$/;"	f
interface.__init__	model/network.lua	/^function interface.__init__(self, ifname, network)$/;"	f
interface._ubus	model/network.lua	/^function interface._ubus(self, field)$/;"	f
interface.adminlink	model/network.lua	/^function interface.adminlink(self)$/;"	f
interface.bridge_id	model/network.lua	/^function interface.bridge_id(self)$/;"	f
interface.bridge_stp	model/network.lua	/^function interface.bridge_stp(self)$/;"	f
interface.get_i18n	model/network.lua	/^function interface.get_i18n(self)$/;"	f
interface.get_network	model/network.lua	/^function interface.get_network(self)$/;"	f
interface.get_networks	model/network.lua	/^function interface.get_networks(self)$/;"	f
interface.get_type_i18n	model/network.lua	/^function interface.get_type_i18n(self)$/;"	f
interface.get_wifinet	model/network.lua	/^function interface.get_wifinet(self)$/;"	f
interface.ip6addrs	model/network.lua	/^function interface.ip6addrs(self)$/;"	f
interface.ipaddrs	model/network.lua	/^function interface.ipaddrs(self)$/;"	f
interface.is_bridge	model/network.lua	/^function interface.is_bridge(self)$/;"	f
interface.is_bridgeport	model/network.lua	/^function interface.is_bridgeport(self)$/;"	f
interface.is_up	model/network.lua	/^function interface.is_up(self)$/;"	f
interface.mac	model/network.lua	/^function interface.mac(self)$/;"	f
interface.name	model/network.lua	/^function interface.name(self)$/;"	f
interface.ports	model/network.lua	/^function interface.ports(self)$/;"	f
interface.rx_bytes	model/network.lua	/^function interface.rx_bytes(self)$/;"	f
interface.rx_packets	model/network.lua	/^function interface.rx_packets(self)$/;"	f
interface.shortname	model/network.lua	/^function interface.shortname(self)$/;"	f
interface.tx_bytes	model/network.lua	/^function interface.tx_bytes(self)$/;"	f
interface.tx_packets	model/network.lua	/^function interface.tx_packets(self)$/;"	f
interface.type	model/network.lua	/^function interface.type(self)$/;"	f
ip.validate	model/cbi/admin_network/dhcp.lua	/^function ip.validate(self, value, section)$/;"	f
ip4addr	cbi/datatypes.lua	/^function ip4addr(val)$/;"	f
ip4prefix	cbi/datatypes.lua	/^function ip4prefix(val)$/;"	f
ip6addr	cbi/datatypes.lua	/^function ip6addr(val)$/;"	f
ip6prefix	cbi/datatypes.lua	/^function ip6prefix(val)$/;"	f
ipaddr	cbi/datatypes.lua	/^function ipaddr(val)$/;"	f
isdirectory	fs.lua	/^function isdirectory(dirname)$/;"	f
isfile	fs.lua	/^function isfile(filename)$/;"	f
keepalive_failure.cfgvalue	model/cbi/admin_network/proto_l2tp.lua	/^function keepalive_failure.cfgvalue(self, section)$/;"	f
keepalive_failure.cfgvalue	model/cbi/admin_network/proto_ppp.lua	/^function keepalive_failure.cfgvalue(self, section)$/;"	f
keepalive_failure.cfgvalue	model/cbi/admin_network/proto_pppoa.lua	/^function keepalive_failure.cfgvalue(self, section)$/;"	f
keepalive_failure.cfgvalue	model/cbi/admin_network/proto_pppoe.lua	/^function keepalive_failure.cfgvalue(self, section)$/;"	f
keepalive_failure.cfgvalue	model/cbi/admin_network/proto_pptp.lua	/^function keepalive_failure.cfgvalue(self, section)$/;"	f
keepalive_failure.remove	model/cbi/admin_network/proto_l2tp.lua	/^function keepalive_failure.remove() end$/;"	f
keepalive_failure.remove	model/cbi/admin_network/proto_ppp.lua	/^function keepalive_failure.remove() end$/;"	f
keepalive_failure.remove	model/cbi/admin_network/proto_pppoa.lua	/^function keepalive_failure.remove() end$/;"	f
keepalive_failure.remove	model/cbi/admin_network/proto_pppoe.lua	/^function keepalive_failure.remove() end$/;"	f
keepalive_failure.remove	model/cbi/admin_network/proto_pptp.lua	/^function keepalive_failure.remove() end$/;"	f
keepalive_failure.write	model/cbi/admin_network/proto_l2tp.lua	/^function keepalive_failure.write() end$/;"	f
keepalive_failure.write	model/cbi/admin_network/proto_ppp.lua	/^function keepalive_failure.write() end$/;"	f
keepalive_failure.write	model/cbi/admin_network/proto_pppoa.lua	/^function keepalive_failure.write() end$/;"	f
keepalive_failure.write	model/cbi/admin_network/proto_pppoe.lua	/^function keepalive_failure.write() end$/;"	f
keepalive_failure.write	model/cbi/admin_network/proto_pptp.lua	/^function keepalive_failure.write() end$/;"	f
keepalive_interval.cfgvalue	model/cbi/admin_network/proto_l2tp.lua	/^function keepalive_interval.cfgvalue(self, section)$/;"	f
keepalive_interval.cfgvalue	model/cbi/admin_network/proto_ppp.lua	/^function keepalive_interval.cfgvalue(self, section)$/;"	f
keepalive_interval.cfgvalue	model/cbi/admin_network/proto_pppoa.lua	/^function keepalive_interval.cfgvalue(self, section)$/;"	f
keepalive_interval.cfgvalue	model/cbi/admin_network/proto_pppoe.lua	/^function keepalive_interval.cfgvalue(self, section)$/;"	f
keepalive_interval.cfgvalue	model/cbi/admin_network/proto_pptp.lua	/^function keepalive_interval.cfgvalue(self, section)$/;"	f
keepalive_interval.write	model/cbi/admin_network/proto_l2tp.lua	/^function keepalive_interval.write(self, section, value)$/;"	f
keepalive_interval.write	model/cbi/admin_network/proto_ppp.lua	/^function keepalive_interval.write(self, section, value)$/;"	f
keepalive_interval.write	model/cbi/admin_network/proto_pppoa.lua	/^function keepalive_interval.write(self, section, value)$/;"	f
keepalive_interval.write	model/cbi/admin_network/proto_pppoe.lua	/^function keepalive_interval.write(self, section, value)$/;"	f
keepalive_interval.write	model/cbi/admin_network/proto_pptp.lua	/^function keepalive_interval.write(self, section, value)$/;"	f
keys	util.lua	/^function keys(t)$/;"	f
keys.cfgvalue	model/cbi/admin_system/admin.lua	/^function keys.cfgvalue()$/;"	f
keys.write	model/cbi/admin_system/admin.lua	/^function keys.write(self, section, value)$/;"	f
kill	sauth.lua	/^function kill(id)$/;"	f
kill.write	model/cbi/admin_status/processes.lua	/^function kill.write(self, section)$/;"	f
kspairs	util.lua	/^function kspairs(t)$/;"	f
lease_status	controller/admin/network.lua	/^function lease_status()$/;"	f
libpath	util.lua	/^function libpath()$/;"	f
limitsource	sgi/cgi.lua	/^local function limitsource(handle, limit)$/;"	f
link	fs.lua	/^function link(src, dest, sym)$/;"	f
link_iface	view/admin_status/iptables.htm	/^	function link_iface(i)$/;"	f
link_target	view/admin_status/iptables.htm	/^	function link_target(t,c)$/;"	f
list	cbi/datatypes.lua	/^function list(v, subvalidator, subargs)$/;"	f
list_all	model/ipkg.lua	/^function list_all(pat, cb)$/;"	f
list_installed	model/ipkg.lua	/^function list_installed(pat, cb)$/;"	f
load	cbi.lua	/^function load(cbimap, ...)$/;"	f
load	i18n.lua	/^function load(file, lang, force)$/;"	f
loadavg	sys.lua	/^function loadavg()$/;"	f
loadc	i18n.lua	/^function loadc(file, force)$/;"	f
local _template 	dispatcher.lua	/^local _template = function(self, ...)$/;"	f
local a 	json.lua	/^	local a = ActiveDecoder(function() return nil end, ...)$/;"	f
local authen 	dispatcher.lua	/^		local authen = type(track.sysauth_authenticator) == "function"$/;"	f
local f 	ltn12.lua	/^    local f = function(chunk, err)$/;"	f
local has_fscheck 	model/cbi/admin_system/fstab/mount.lua	/^local has_fscheck = fs.access("\/lib\/functions\/fsck.sh")$/;"	f
local newf 	util.lua	/^		local newf = function() return f(unpack(params)) end$/;"	f
local portvalidate 	model/cbi/admin_network/vlan.lua	/^		local portvalidate = function(self, value, section)$/;"	f
local portvalue 	model/cbi/admin_network/vlan.lua	/^		local portvalue = function(self, section)$/;"	f
local proto, off 	util.lua	/^			local proto, off = strip_function(code:sub(offset, -1))$/;"	f
local stat, err 	dispatcher.lua	/^	local stat, err = util.coxpcall(function()$/;"	f
lookup_zone	model/cbi/admin_system/system.lua	/^	local function lookup_zone(title)$/;"	f
ltn12_popen	controller/admin/system.lua	/^function ltn12_popen(command)$/;"	f
m.on_cancel	model/cbi/admin_network/wifi_add.lua	/^function m.on_cancel()$/;"	f
m.on_commit	model/cbi/admin_network/wifi.lua	/^function m.on_commit(map)$/;"	f
m.on_commit	model/cbi/admin_system/admin.lua	/^function m.on_commit(map)$/;"	f
m.on_commit 	model/cbi/firewall/zone-details.lua	/^m.on_commit = function(map)$/;"	f
m.parse	model/cbi/admin_network/wifi.lua	/^function m.parse(map)$/;"	f
mac, name) ml:value	model/cbi/admin_network/wifi.lua	/^	nt.mac_hints(function(mac, name) ml:value(mac, "%s (%s)" %{ mac, name }) end)$/;"	f
macaddr	cbi/datatypes.lua	/^function macaddr(val)$/;"	f
match.cfgvalue	model/cbi/firewall/forwards.lua	/^function match.cfgvalue(self, s)$/;"	f
match.cfgvalue	model/cbi/firewall/rules.lua	/^function match.cfgvalue(self, s)$/;"	f
max	cbi/datatypes.lua	/^function max(val, max)$/;"	f
maxlength	cbi/datatypes.lua	/^function maxlength(val, max)$/;"	f
mimedecode_message_body	http/protocol.lua	/^function mimedecode_message_body( src, msg, filecb )$/;"	f
min	cbi/datatypes.lua	/^function min(val, min)$/;"	f
minlength	cbi/datatypes.lua	/^function minlength(val, min)$/;"	f
mk_etag	http/protocol/conditionals.lua	/^function mk_etag( stat )$/;"	f
mkdir	fs.lua	/^function mkdir(path, recursive)$/;"	f
mode.cfgvalue	model/cbi/admin_network/wifi.lua	/^	function mode.cfgvalue(self, section)$/;"	f
mode.write	model/cbi/admin_network/wifi.lua	/^	function mode.write(self, section, value)$/;"	f
modifier	dispatcher.lua	/^function modifier(func, order)$/;"	f
modisort	dispatcher.lua	/^	local function modisort(a,b)$/;"	f
mount.create 	model/cbi/admin_system/fstab.lua	/^mount.create = function(...)$/;"	f
mounts	sys.lua	/^function mounts()$/;"	f
mp.cfgvalue 	model/cbi/admin_system/fstab.lua	/^mp.cfgvalue = function(self, section)$/;"	f
mtime	fs.lua	/^function mtime(path)$/;"	f
name.write	model/cbi/firewall/zone-details.lua	/^function name.write(self, section, value)$/;"	f
navigation	view/themes/openwrt.org/header.htm	/^<h2 class="navigation"><a id="navigation" name="navigation"><%:Navigation%><\/a><\/h2>$/;"	a
neg	cbi/datatypes.lua	/^function neg(v, ...)$/;"	f
net.arptable	sys.lua	/^function net.arptable(callback)$/;"	f
net.cfgvalue	model/cbi/firewall/zone-details.lua	/^function net.cfgvalue(self, section)$/;"	f
net.conntrack	sys.lua	/^function net.conntrack(callback)$/;"	f
net.defaultroute	sys.lua	/^function net.defaultroute()$/;"	f
net.defaultroute6	sys.lua	/^function net.defaultroute6()$/;"	f
net.deviceinfo	sys.lua	/^function net.deviceinfo()$/;"	f
net.devices	sys.lua	/^function net.devices()$/;"	f
net.formvalue	model/cbi/firewall/zone-details.lua	/^function net.formvalue(self, section)$/;"	f
net.ip4mac	sys.lua	/^function net.ip4mac(ip)$/;"	f
net.ipv4_hints	sys.lua	/^function net.ipv4_hints(callback)$/;"	f
net.ipv6_hints	sys.lua	/^function net.ipv6_hints(callback)$/;"	f
net.mac_hints	sys.lua	/^function net.mac_hints(callback)$/;"	f
net.pingtest	sys.lua	/^function net.pingtest(host)$/;"	f
net.routes	sys.lua	/^function net.routes(callback)$/;"	f
net.routes6	sys.lua	/^function net.routes6(callback)$/;"	f
net.write	model/cbi/firewall/zone-details.lua	/^function net.write(self, section, value)$/;"	f
network	cbi/datatypes.lua	/^function network(val)$/;"	f
network	model/network.lua	/^function network(name, proto)$/;"	f
network.write	model/cbi/admin_network/wifi.lua	/^function network.write(self, section, value)$/;"	f
network_get_addresses	tools/webadmin.lua	/^function network_get_addresses(net)$/;"	f
network_get_zones	tools/webadmin.lua	/^function network_get_zones(net)$/;"	f
new_zone	model/firewall.lua	/^function new_zone(self)$/;"	f
newnet.parse	model/cbi/admin_network/wifi_add.lua	/^function newnet.parse(self, section)$/;"	f
newproto.validate	model/cbi/admin_network/iface_add.lua	/^function newproto.validate(self, value, section)$/;"	f
newproto.write	model/cbi/admin_network/iface_add.lua	/^function newproto.write(self, section, value)$/;"	f
node	dispatcher.lua	/^function node(...)$/;"	f
node_childs	dispatcher.lua	/^function node_childs(node)$/;"	f
node_visible	dispatcher.lua	/^function node_visible(node)$/;"	f
nowrap	view/admin_network/wifi_overview.htm	/^	function nowrap(s) {$/;"	f
null	json.lua	/^function null()$/;"	f
null	ltn12.lua	/^local function null()$/;"	f
o.cfgvalue	model/cbi/admin_system/system.lua	/^		function o.cfgvalue(self)$/;"	f
o.cfgvalue	model/cbi/admin_system/system.lua	/^function o.cfgvalue(...)$/;"	f
o.cfgvalue	model/cbi/firewall/custom.lua	/^function o.cfgvalue(self, section)$/;"	f
o.cfgvalue	model/cbi/firewall/forward-details.lua	/^function o.cfgvalue(...)$/;"	f
o.cfgvalue	model/cbi/firewall/rule-details.lua	/^	function o.cfgvalue(...)$/;"	f
o.cfgvalue	tools/firewall.lua	/^	function o.cfgvalue(self, section)$/;"	f
o.cfgvalue	tools/proto.lua	/^	function o.cfgvalue(self, section)$/;"	f
o.cfgvalue 	model/cbi/firewall/forward-details.lua	/^o.cfgvalue = function(...)$/;"	f
o.cfgvalue 	model/cbi/firewall/zones.lua	/^o.cfgvalue = function(self, section)$/;"	f
o.remove	model/cbi/admin_system/system.lua	/^		function o.remove() end$/;"	f
o.remove	tools/firewall.lua	/^	function o.remove(self, section)$/;"	f
o.remove	tools/proto.lua	/^	function o.remove(self, section)$/;"	f
o.render	tools/firewall.lua	/^		function o.render(self, section)$/;"	f
o.write	model/cbi/admin_system/system.lua	/^		function o.write(self, section, value)$/;"	f
o.write	model/cbi/admin_system/system.lua	/^function o.write(self, section, value)$/;"	f
o.write	model/cbi/firewall/custom.lua	/^function o.write(self, section, value)$/;"	f
o.write	tools/firewall.lua	/^		function o.write(self, section, value)$/;"	f
o.write	tools/firewall.lua	/^	function o.write(self, section, value)$/;"	f
o.write	tools/proto.lua	/^	function o.write(self, section, value)$/;"	f
op.cfgvalue 	model/cbi/admin_system/fstab.lua	/^op.cfgvalue = function(self, section)$/;"	f
opt_enabled	tools/firewall.lua	/^function opt_enabled(s, t, ...)$/;"	f
opt_macaddr	tools/proto.lua	/^function opt_macaddr(s, ifc, ...)$/;"	f
opt_name	tools/firewall.lua	/^function opt_name(s, t, ...)$/;"	f
or (scope and type(scope[key]) ~	dispatcher.lua	/^					 or (scope and type(scope[key]) ~= "function" and scope[key])$/;"	f
or (type(env[key]) ~	dispatcher.lua	/^					 or (type(env[key]) ~= "function" and env[key])$/;"	f
out.cfgvalue	model/cbi/firewall/zone-details.lua	/^function out.cfgvalue(self, section)$/;"	f
out.formvalue	model/cbi/firewall/zone-details.lua	/^function out.formvalue(self, section)$/;"	f
out.write	model/cbi/firewall/zone-details.lua	/^function out.write(self, section, value)$/;"	f
overlay_root	model/ipkg.lua	/^function overlay_root()$/;"	f
p.remove	model/cbi/admin_network/ifaces.lua	/^function p.remove() end$/;"	f
p.validate	model/cbi/admin_network/ifaces.lua	/^function p.validate(self, value, section)$/;"	f
p.write	model/cbi/admin_network/ifaces.lua	/^function p.write() end$/;"	f
p_install.write	model/cbi/admin_network/ifaces.lua	/^	function p_install.write()$/;"	f
package.loaders[2] 	ccache.lua	/^	package.loaders[2] = function(mod)$/;"	f
param	controller/admin/network.lua	/^	local function param(x)$/;"	f
parse_headers	http/protocol.lua	/^	local function parse_headers( chunk, field )$/;"	f
parse_message_body	http/protocol.lua	/^function parse_message_body( src, msg, filecb )$/;"	f
parse_message_header	http/protocol.lua	/^function parse_message_header( src )$/;"	f
parse_units	util.lua	/^function parse_units(ustr)$/;"	f
pcdata	util.lua	/^function pcdata(value)$/;"	f
percent_wifi_signal	view/admin_network/wifi_join.htm	/^	function percent_wifi_signal(info)$/;"	f
performResume	util.lua	/^function performResume(err, co, ...)$/;"	f
perror	util.lua	/^function perror(obj)$/;"	f
phonedigit	cbi/datatypes.lua	/^function phonedigit(val)$/;"	f
po.write    	model/cbi/admin_network/vlan.lua	/^			po.write    = function() end$/;"	f
port	cbi/datatypes.lua	/^function port(val)$/;"	f
portrange	cbi/datatypes.lua	/^function portrange(val)$/;"	f
prepare	sauth.lua	/^function prepare()$/;"	f
prepare_content	http.lua	/^function prepare_content(mime)$/;"	f
process.info	sys.lua	/^function process.info(key)$/;"	f
process.list	sys.lua	/^function process.list()$/;"	f
process.setgroup	sys.lua	/^function process.setgroup(gid)$/;"	f
process.setuser	sys.lua	/^function process.setuser(uid)$/;"	f
process_states['headers'] 	http/protocol.lua	/^process_states['headers'] = function( msg, chunk )$/;"	f
process_states['magic'] 	http/protocol.lua	/^process_states['magic'] = function( msg, chunk, err )$/;"	f
progressbar	view/admin_status/index.htm	/^	function progressbar(v, m)$/;"	f
proto.__init__	model/network.lua	/^	function proto.__init__(self, name)$/;"	f
proto.contains_interface	model/network/proto_ppp.lua	/^	function proto.contains_interface(self, ifc)$/;"	f
proto.get_i18n	model/network/proto_ppp.lua	/^	function proto.get_i18n(self)$/;"	f
proto.get_interfaces	model/network/proto_ppp.lua	/^	function proto.get_interfaces(self)$/;"	f
proto.ifname	model/network/proto_ppp.lua	/^	function proto.ifname(self)$/;"	f
proto.is_floating	model/network/proto_ppp.lua	/^	function proto.is_floating(self)$/;"	f
proto.is_installed	model/network/proto_ppp.lua	/^	function proto.is_installed(self)$/;"	f
proto.is_virtual	model/network/proto_ppp.lua	/^	function proto.is_virtual(self)$/;"	f
proto.opkg_package	model/network/proto_ppp.lua	/^	function proto.opkg_package(self)$/;"	f
proto.proto	model/network.lua	/^	function proto.proto(self)$/;"	f
protocol.__init__	model/network.lua	/^function protocol.__init__(self, name)$/;"	f
protocol._get	model/network.lua	/^function protocol._get(self, opt)$/;"	f
protocol._ubus	model/network.lua	/^function protocol._ubus(self, field)$/;"	f
protocol.add_interface	model/network.lua	/^function protocol.add_interface(self, ifname)$/;"	f
protocol.add_slaves	model/network.lua	/^function protocol.add_slaves(self, ifname)$/;"	f
protocol.adminlink	model/network.lua	/^function protocol.adminlink(self)$/;"	f
protocol.bonding_mode	model/network.lua	/^function protocol.bonding_mode(self)$/;"	f
protocol.contains_interface	model/network.lua	/^function protocol.contains_interface(self, ifname)$/;"	f
protocol.del_interface	model/network.lua	/^function protocol.del_interface(self, ifname)$/;"	f
protocol.dns6addrs	model/network.lua	/^function protocol.dns6addrs(self)$/;"	f
protocol.dnsaddrs	model/network.lua	/^function protocol.dnsaddrs(self)$/;"	f
protocol.expires	model/network.lua	/^function protocol.expires(self)$/;"	f
protocol.get	model/network.lua	/^function protocol.get(self, opt)$/;"	f
protocol.get_i18n	model/network.lua	/^function protocol.get_i18n(self)$/;"	f
protocol.get_interface	model/network.lua	/^function protocol.get_interface(self)$/;"	f
protocol.get_interfaces	model/network.lua	/^function protocol.get_interfaces(self)$/;"	f
protocol.gw6addr	model/network.lua	/^function protocol.gw6addr(self)$/;"	f
protocol.gwaddr	model/network.lua	/^function protocol.gwaddr(self)$/;"	f
protocol.ifname	model/network.lua	/^function protocol.ifname(self)$/;"	f
protocol.ip6addr	model/network.lua	/^function protocol.ip6addr(self)$/;"	f
protocol.ipaddr	model/network.lua	/^function protocol.ipaddr(self)$/;"	f
protocol.is_bonding	model/network.lua	/^function protocol.is_bonding(self)$/;"	f
protocol.is_bridge	model/network.lua	/^function protocol.is_bridge(self)$/;"	f
protocol.is_empty	model/network.lua	/^function protocol.is_empty(self)$/;"	f
protocol.is_floating	model/network.lua	/^function protocol.is_floating(self)$/;"	f
protocol.is_installed	model/network.lua	/^function protocol.is_installed(self)$/;"	f
protocol.is_virtual	model/network.lua	/^function protocol.is_virtual(self)$/;"	f
protocol.metric	model/network.lua	/^function protocol.metric(self)$/;"	f
protocol.name	model/network.lua	/^function protocol.name(self)$/;"	f
protocol.netmask	model/network.lua	/^function protocol.netmask(self)$/;"	f
protocol.opkg_package	model/network.lua	/^function protocol.opkg_package(self)$/;"	f
protocol.proto	model/network.lua	/^function protocol.proto(self)$/;"	f
protocol.set	model/network.lua	/^function protocol.set(self, opt, val)$/;"	f
protocol.type	model/network.lua	/^function protocol.type(self)$/;"	f
protocol.uptime	model/network.lua	/^function protocol.uptime(self)$/;"	f
ptable	controller/admin/network.lua	/^	local function ptable(x)$/;"	f
pump.all	ltn12.lua	/^function pump.all(src, snk, step)$/;"	f
pump.step	ltn12.lua	/^function pump.step(src, snk)$/;"	f
range	cbi/datatypes.lua	/^function range(val, min, max)$/;"	f
rangelength	cbi/datatypes.lua	/^function rangelength(val, min, max)$/;"	f
rate_label	view/admin_status/wireless.htm	/^						function rate_label(mbit)$/;"	f
read	sauth.lua	/^function read(id)$/;"	f
reap	sauth.lua	/^function reap()$/;"	f
reboot	sys.lua	/^function reboot()$/;"	f
redirect	http.lua	/^function redirect(url)$/;"	f
redirect.__init__	model/firewall.lua	/^function redirect.__init__(self, f)$/;"	f
redirect.dest	model/firewall.lua	/^function redirect.dest(self)$/;"	f
redirect.dest_zone	model/firewall.lua	/^function redirect.dest_zone(self)$/;"	f
redirect.get	model/firewall.lua	/^function redirect.get(self, opt)$/;"	f
redirect.set	model/firewall.lua	/^function redirect.set(self, opt, val)$/;"	f
redirect.src	model/firewall.lua	/^function redirect.src(self)$/;"	f
redirect.src_zone	model/firewall.lua	/^function redirect.src_zone(self)$/;"	f
register_pattern_virtual	model/network.lua	/^function register_pattern_virtual(self, pat)$/;"	f
register_protocol	model/network.lua	/^function register_protocol(self, protoname)$/;"	f
remove	model/ipkg.lua	/^function remove(...)$/;"	f
rename_network	model/network.lua	/^function rename_network(self, old, new)$/;"	f
rename_zone	model/firewall.lua	/^function rename_zone(self, old, new)$/;"	f
render	template.lua	/^function render(name, scope)$/;"	f
replace.cfgvalue	model/cbi/admin_network/wifi_add.lua	/^	function replace.cfgvalue() return "1" end$/;"	f
replace.formvalue	model/cbi/admin_network/wifi_add.lua	/^	function replace.formvalue() return "1" end$/;"	f
restore_data	util.lua	/^function restore_data(str)$/;"	f
return string.byte(string.dump(function() end), 7) 	util.lua	/^	return string.byte(string.dump(function() end), 7) == 0$/;"	f
rewrite	dispatcher.lua	/^function rewrite(n, ...)$/;"	f
rf.cfgvalue 	model/cbi/admin_system/fstab.lua	/^rf.cfgvalue = function(self, section)$/;"	f
rowstyle	view/admin_status/iptables.htm	/^	function rowstyle()$/;"	f
rowstyle	view/admin_system/packages.htm	/^function rowstyle()$/;"	f
rowstyle	view/cbi/tblsection.htm	/^function rowstyle()$/;"	f
rule.__init__	model/firewall.lua	/^function rule.__init__(self, f)$/;"	f
rule.dest	model/firewall.lua	/^function rule.dest(self)$/;"	f
rule.dest_zone	model/firewall.lua	/^function rule.dest_zone(self)$/;"	f
rule.get	model/firewall.lua	/^function rule.get(self, opt)$/;"	f
rule.set	model/firewall.lua	/^function rule.set(self, opt, val)$/;"	f
rule.src	model/firewall.lua	/^function rule.src(self)$/;"	f
rule.src_zone	model/firewall.lua	/^function rule.src_zone(self)$/;"	f
rule_dest_txt	model/cbi/firewall/rules.lua	/^local function rule_dest_txt(self, s)$/;"	f
rule_proto_txt	model/cbi/firewall/rules.lua	/^local function rule_proto_txt(self, s)$/;"	f
rule_src_txt	model/cbi/firewall/rules.lua	/^local function rule_src_txt(self, s)$/;"	f
run	sgi/cgi.lua	/^function run()$/;"	f
s.cfgsections	model/cbi/admin_system/admin.lua	/^function s.cfgsections()$/;"	f
s.cfgsections 	model/cbi/admin_network/ifaces.lua	/^		s.cfgsections = function() return { "_enable" } end$/;"	f
s.cfgsections 	model/cbi/admin_network/vlan.lua	/^		s.cfgsections = function(self)$/;"	f
s.cfgsections 	model/cbi/admin_system/system.lua	/^		s.cfgsections = function() return { "_timeserver" } end$/;"	f
s.create	model/cbi/firewall/forwards.lua	/^function s.create(self, section)$/;"	f
s.create	model/cbi/firewall/rules.lua	/^function s.create(self, section)$/;"	f
s.create	model/cbi/firewall/zones.lua	/^function s.create(self)$/;"	f
s.create 	model/cbi/admin_network/vlan.lua	/^		s.create = function(self, section, origin)$/;"	f
s.filter	model/cbi/admin_network/ifaces.lua	/^		function s.filter(self, section)$/;"	f
s.filter	model/cbi/firewall/forwards.lua	/^function s.filter(self, sid)$/;"	f
s.filter	model/cbi/firewall/rules.lua	/^function s.filter(self, sid)$/;"	f
s.filter 	model/cbi/admin_network/vlan.lua	/^		s.filter = function(self, section)$/;"	f
s.parse	model/cbi/admin_system/leds.lua	/^function s.parse(self, ...)$/;"	f
s.parse	model/cbi/firewall/forwards.lua	/^function s.parse(self, ...)$/;"	f
s.parse	model/cbi/firewall/rules.lua	/^function s.parse(self, ...)$/;"	f
s.remove	model/cbi/firewall/zones.lua	/^function s.remove(self, section)$/;"	f
s2.cfgsections	model/cbi/admin_system/admin.lua	/^function s2.cfgsections()$/;"	f
sane	sauth.lua	/^function sane(file)$/;"	f
save	model/firewall.lua	/^function save(self, ...)$/;"	f
save	model/network.lua	/^function save(self, ...)$/;"	f
scanlist	view/admin_network/wifi_join.htm	/^	function scanlist(times)$/;"	f
self.filehandler 	http.lua	/^	self.filehandler = function() end$/;"	f
serialize_data	util.lua	/^function serialize_data(val, seen)$/;"	f
set_status	model/cbi/admin_network/ifaces.lua	/^local function set_status()$/;"	f
setfilehandler	http.lua	/^function setfilehandler(callback)$/;"	f
setlanguage	i18n.lua	/^function setlanguage(lang)$/;"	f
sink 	http/protocol.lua	/^			sink = function( chunk, err )$/;"	f
sink.chain	ltn12.lua	/^function sink.chain(f, snk)$/;"	f
sink.error	ltn12.lua	/^function sink.error(err)$/;"	f
sink.file	ltn12.lua	/^function sink.file(handle, io_err)$/;"	f
sink.null	ltn12.lua	/^function sink.null()$/;"	f
sink.simplify	ltn12.lua	/^function sink.simplify(snk)$/;"	f
sink.table	ltn12.lua	/^function sink.table(t)$/;"	f
snat.cfgvalue	model/cbi/firewall/rules.lua	/^function snat.cfgvalue(self, s)$/;"	f
snat_dest_txt	model/cbi/firewall/rules.lua	/^local function snat_dest_txt(self, s)$/;"	f
snk	http/protocol.lua	/^	local function snk( chunk )$/;"	f
source	http.lua	/^function source()$/;"	f
source.cat	ltn12.lua	/^function source.cat(...)$/;"	f
source.chain	ltn12.lua	/^function source.chain(src, f)$/;"	f
source.empty	ltn12.lua	/^function source.empty()$/;"	f
source.error	ltn12.lua	/^function source.error(err)$/;"	f
source.file	ltn12.lua	/^function source.file(handle, io_err)$/;"	f
source.rewind	ltn12.lua	/^function source.rewind(src)$/;"	f
source.simplify	ltn12.lua	/^function source.simplify(src)$/;"	f
source.string	ltn12.lua	/^function source.string(s)$/;"	f
spairs	util.lua	/^function spairs(t,f)$/;"	f
splice	http.lua	/^function splice(fd, size)$/;"	f
split	util.lua	/^function split(str, pat, max, regex)$/;"	f
start.write 	model/cbi/admin_system/startup.lua	/^start.write = function(self, section)$/;"	f
stat	fs.lua	/^function stat(path, key)$/;"	f
status	http.lua	/^function status(code, message)$/;"	f
status	model/ipkg.lua	/^function status(pkg)$/;"	f
storage_size	controller/admin/system.lua	/^	local function storage_size()$/;"	f
store 	http/protocol.lua	/^				store = function( hdr, buf, eof )$/;"	f
string	cbi/datatypes.lua	/^function string(val)$/;"	f
string	i18n.lua	/^function string(key)$/;"	f
stringf	i18n.lua	/^function stringf(key, ...)$/;"	f
strip_bytecode	util.lua	/^function strip_bytecode(code)$/;"	f
strip_function	util.lua	/^	local function strip_function(code)$/;"	f
striptags	util.lua	/^function striptags(value)$/;"	f
subint 	util.lua	/^		subint = function(code, i, l)$/;"	f
swap.create 	model/cbi/admin_system/fstab.lua	/^swap.create = function(...)$/;"	f
switch_status	controller/admin/network.lua	/^function switch_status(switches)$/;"	f
switch_status	tools/status.lua	/^function switch_status(devs)$/;"	f
sync_clock	view/admin_system/clock_status.htm	/^	function sync_clock(btn)$/;"	f
sysinfo	sys.lua	/^function sysinfo()$/;"	f
syslog	sys.lua	/^function syslog()$/;"	f
t.cfgvalue	model/cbi/admin_system/crontab.lua	/^function t.cfgvalue()$/;"	f
t.cfgvalue	model/cbi/admin_system/ipkg.lua	/^function t.cfgvalue()$/;"	f
t.cfgvalue	model/cbi/admin_system/startup.lua	/^function t.cfgvalue()$/;"	f
t.write	model/cbi/admin_system/ipkg.lua	/^function t.write(self, section, data)$/;"	f
target.cfgvalue	model/cbi/firewall/rules.lua	/^function target.cfgvalue(self, s)$/;"	f
template	dispatcher.lua	/^function template(name)$/;"	f
term.write	model/cbi/admin_status/processes.lua	/^function term.write(self, section)$/;"	f
threadlocal	util.lua	/^function threadlocal(tbl)$/;"	f
to_ext	http/protocol/mime.lua	/^function to_ext(mimetype)$/;"	f
to_http	http/protocol/date.lua	/^function to_http(time)$/;"	f
to_mime	http/protocol/mime.lua	/^function to_mime(filename)$/;"	f
to_unix	http/protocol/date.lua	/^function to_unix(date)$/;"	f
tp.cfgvalue	model/cbi/admin_network/wifi.lua	/^		function tp.cfgvalue(...)$/;"	f
tp.cfgvalue	model/cbi/admin_network/wifi.lua	/^	function tp.cfgvalue(...)$/;"	f
tr	tools/firewall.lua	/^local function tr(...)$/;"	f
translate	i18n.lua	/^function translate(key)$/;"	f
translatef	i18n.lua	/^function translatef(key, ...)$/;"	f
trap	debug.lua	/^	local function trap(what, line)$/;"	f
trap_memtrace	debug.lua	/^function trap_memtrace(flags, dest)$/;"	f
trim	util.lua	/^function trim(str)$/;"	f
txpower_current	model/cbi/admin_network/wifi.lua	/^local function txpower_current(pwr, list)$/;"	f
txpower_list	model/cbi/admin_network/wifi.lua	/^local function txpower_list(iw)$/;"	f
tz_offset	http/protocol/date.lua	/^function tz_offset(tz)$/;"	f
uciname	cbi/datatypes.lua	/^function uciname(val)$/;"	f
ufloat	cbi/datatypes.lua	/^function ufloat(val)$/;"	f
uinteger	cbi/datatypes.lua	/^function uinteger(val)$/;"	f
uniqueid	sys.lua	/^function uniqueid(bytes)$/;"	f
update	model/ipkg.lua	/^function update()$/;"	f
update	util.lua	/^function update(t, updates)$/;"	f
update_status	view/admin_network/diagnostics.htm	/^	function update_status(field, proto)$/;"	f
upgrade	model/ipkg.lua	/^function upgrade()$/;"	f
uptime	sys.lua	/^function uptime()$/;"	f
urldecode	http/protocol.lua	/^function urldecode( str, no_plus )$/;"	f
urldecode_message_body	http/protocol.lua	/^function urldecode_message_body( src, msg )$/;"	f
urldecode_params	http/protocol.lua	/^function urldecode_params( url, tbl )$/;"	f
urlencode	http/protocol.lua	/^function urlencode( str )$/;"	f
urlencode_params	http/protocol.lua	/^function urlencode_params( tbl )$/;"	f
usbdev.cfgvalue	model/cbi/admin_system/leds.lua	/^function usbdev.cfgvalue(self, section)$/;"	f
usbdev.remove	model/cbi/admin_system/leds.lua	/^function usbdev.remove(self, section)$/;"	f
usbdev.write	model/cbi/admin_system/leds.lua	/^function usbdev.write(self, section, value)$/;"	f
used.cfgvalue	model/cbi/admin_system/fstab.lua	/^function used.cfgvalue(self, section)$/;"	f
user.checkpasswd	sys.lua	/^function user.checkpasswd(username, pass)$/;"	f
user.getpasswd	sys.lua	/^function user.getpasswd(username)$/;"	f
user.setpasswd	sys.lua	/^function user.setpasswd(username, password)$/;"	f
utime	fs.lua	/^function utime(path, mtime, atime)$/;"	f
verify_datatype	cbi.lua	/^function verify_datatype(dt, value)$/;"	f
vid.cfgvalue 	model/cbi/admin_network/vlan.lua	/^		vid.cfgvalue = function(self, section)$/;"	f
vid.validate 	model/cbi/admin_network/vlan.lua	/^		vid.validate = function(self, value, section)$/;"	f
vid.write 	model/cbi/admin_network/vlan.lua	/^		vid.write = function(self, section, value)$/;"	f
vspairs	util.lua	/^function vspairs(t)$/;"	f
wapikey.cfgvalue 	model/cbi/admin_network/wifi.lua	/^wapikey.cfgvalue = function(self, section, value)$/;"	f
wapikey.write 	model/cbi/admin_network/wifi.lua	/^wapikey.write = function(self, section, value)$/;"	f
wepkey	cbi/datatypes.lua	/^function wepkey(val)$/;"	f
wepkey.write	model/cbi/admin_network/wifi.lua	/^	function wepkey.write(self, section, value)$/;"	f
wepslot.cfgvalue 	model/cbi/admin_network/wifi.lua	/^wepslot.cfgvalue = function(self, section)$/;"	f
wepslot.write 	model/cbi/admin_network/wifi.lua	/^wepslot.write = function(self, section, value)$/;"	f
width	view/cbi/tblsection.htm	/^function width(o)$/;"	f
wifi.getiwinfo	sys.lua	/^function wifi.getiwinfo(ifname)$/;"	f
wifi_add	controller/admin/network.lua	/^function wifi_add()$/;"	f
wifi_delete	controller/admin/network.lua	/^function wifi_delete(network)$/;"	f
wifi_join	controller/admin/network.lua	/^function wifi_join()$/;"	f
wifi_network	tools/status.lua	/^function wifi_network(id)$/;"	f
wifi_networks	tools/status.lua	/^function wifi_networks()$/;"	f
wifi_reconnect	controller/admin/network.lua	/^function wifi_reconnect(wnet)$/;"	f
wifi_reconnect_shutdown	controller/admin/network.lua	/^local function wifi_reconnect_shutdown(shutdown, wnet)$/;"	f
wifi_shutdown	controller/admin/network.lua	/^function wifi_shutdown(wnet)$/;"	f
wifi_shutdown	view/admin_network/wifi_overview.htm	/^	function wifi_shutdown(id, toggle) {$/;"	f
wifi_status	controller/admin/network.lua	/^function wifi_status(devs)$/;"	f
wifidev.__init__	model/network.lua	/^function wifidev.__init__(self, dev)$/;"	f
wifidev.add_wifinet	model/network.lua	/^function wifidev.add_wifinet(self, options)$/;"	f
wifidev.del_wifinet	model/network.lua	/^function wifidev.del_wifinet(self, net)$/;"	f
wifidev.get	model/network.lua	/^function wifidev.get(self, opt)$/;"	f
wifidev.get_i18n	model/network.lua	/^function wifidev.get_i18n(self)$/;"	f
wifidev.get_wifinet	model/network.lua	/^function wifidev.get_wifinet(self, net)$/;"	f
wifidev.get_wifinets	model/network.lua	/^function wifidev.get_wifinets(self)$/;"	f
wifidev.hwmodes	model/network.lua	/^function wifidev.hwmodes(self)$/;"	f
wifidev.is_up	model/network.lua	/^function wifidev.is_up(self)$/;"	f
wifidev.name	model/network.lua	/^function wifidev.name(self)$/;"	f
wifidev.set	model/network.lua	/^function wifidev.set(self, opt, val)$/;"	f
wifinet.__init__	model/network.lua	/^function wifinet.__init__(self, net, data)$/;"	f
wifinet.active_bssid	model/network.lua	/^function wifinet.active_bssid(self)$/;"	f
wifinet.active_encryption	model/network.lua	/^function wifinet.active_encryption(self)$/;"	f
wifinet.active_mode	model/network.lua	/^function wifinet.active_mode(self)$/;"	f
wifinet.active_mode_i18n	model/network.lua	/^function wifinet.active_mode_i18n(self)$/;"	f
wifinet.active_ssid	model/network.lua	/^function wifinet.active_ssid(self)$/;"	f
wifinet.adminlink	model/network.lua	/^function wifinet.adminlink(self)$/;"	f
wifinet.assoclist	model/network.lua	/^function wifinet.assoclist(self)$/;"	f
wifinet.bitrate	model/network.lua	/^function wifinet.bitrate(self)$/;"	f
wifinet.bssid	model/network.lua	/^function wifinet.bssid(self)$/;"	f
wifinet.channel	model/network.lua	/^function wifinet.channel(self)$/;"	f
wifinet.country	model/network.lua	/^function wifinet.country(self)$/;"	f
wifinet.frequency	model/network.lua	/^function wifinet.frequency(self)$/;"	f
wifinet.get	model/network.lua	/^function wifinet.get(self, opt)$/;"	f
wifinet.get_device	model/network.lua	/^function wifinet.get_device(self)$/;"	f
wifinet.get_i18n	model/network.lua	/^function wifinet.get_i18n(self)$/;"	f
wifinet.get_interface	model/network.lua	/^function wifinet.get_interface(self)$/;"	f
wifinet.get_network	model/network.lua	/^function wifinet.get_network(self)$/;"	f
wifinet.get_networks	model/network.lua	/^function wifinet.get_networks(self)$/;"	f
wifinet.id	model/network.lua	/^function wifinet.id(self)$/;"	f
wifinet.ifname	model/network.lua	/^function wifinet.ifname(self)$/;"	f
wifinet.is_up	model/network.lua	/^function wifinet.is_up(self)$/;"	f
wifinet.mode	model/network.lua	/^function wifinet.mode(self)$/;"	f
wifinet.name	model/network.lua	/^function wifinet.name(self)$/;"	f
wifinet.network	model/network.lua	/^function wifinet.network(self)$/;"	f
wifinet.noise	model/network.lua	/^function wifinet.noise(self)$/;"	f
wifinet.set	model/network.lua	/^function wifinet.set(self, opt, val)$/;"	f
wifinet.shortname	model/network.lua	/^function wifinet.shortname(self)$/;"	f
wifinet.signal	model/network.lua	/^function wifinet.signal(self)$/;"	f
wifinet.signal_level	model/network.lua	/^function wifinet.signal_level(self, s, n)$/;"	f
wifinet.signal_percent	model/network.lua	/^function wifinet.signal_percent(self)$/;"	f
wifinet.ssid	model/network.lua	/^function wifinet.ssid(self)$/;"	f
wifinet.txpower	model/network.lua	/^function wifinet.txpower(self)$/;"	f
wifinet.txpower_offset	model/network.lua	/^function wifinet.txpower_offset(self)$/;"	f
wireless_label	view/admin_status/wireless.htm	/^						function wireless_label(dbm, noise)$/;"	f
wpakey	cbi/datatypes.lua	/^function wpakey(val)$/;"	f
wpakey.cfgvalue 	model/cbi/admin_network/wifi.lua	/^wpakey.cfgvalue = function(self, section, value)$/;"	f
wpakey.write 	model/cbi/admin_network/wifi.lua	/^wpakey.write = function(self, section, value)$/;"	f
write	http.lua	/^function write(content, src_err)$/;"	f
write	sauth.lua	/^function write(id, data)$/;"	f
write_json	http.lua	/^function write_json(x)$/;"	f
zone.__init__	model/firewall.lua	/^function zone.__init__(self, z)$/;"	f
zone.add_forwarding_from	model/firewall.lua	/^function zone.add_forwarding_from(self, src)$/;"	f
zone.add_forwarding_to	model/firewall.lua	/^function zone.add_forwarding_to(self, dest)$/;"	f
zone.add_network	model/firewall.lua	/^function zone.add_network(self, net)$/;"	f
zone.add_redirect	model/firewall.lua	/^function zone.add_redirect(self, options)$/;"	f
zone.add_rule	model/firewall.lua	/^function zone.add_rule(self, options)$/;"	f
zone.clear_networks	model/firewall.lua	/^function zone.clear_networks(self)$/;"	f
zone.del_forwardings_by	model/firewall.lua	/^function zone.del_forwardings_by(self, what)$/;"	f
zone.del_network	model/firewall.lua	/^function zone.del_network(self, net)$/;"	f
zone.forward	model/firewall.lua	/^function zone.forward(self)$/;"	f
zone.get	model/firewall.lua	/^function zone.get(self, opt)$/;"	f
zone.get_color	model/firewall.lua	/^function zone.get_color(self)$/;"	f
zone.get_forwardings_by	model/firewall.lua	/^function zone.get_forwardings_by(self, what)$/;"	f
zone.get_networks	model/firewall.lua	/^function zone.get_networks(self)$/;"	f
zone.input	model/firewall.lua	/^function zone.input(self)$/;"	f
zone.masq	model/firewall.lua	/^function zone.masq(self)$/;"	f
zone.name	model/firewall.lua	/^function zone.name(self)$/;"	f
zone.network	model/firewall.lua	/^function zone.network(self)$/;"	f
zone.output	model/firewall.lua	/^function zone.output(self)$/;"	f
zone.set	model/firewall.lua	/^function zone.set(self, opt, val)$/;"	f
}, {__index	dispatcher.lua	/^		}, {__index=function(table, key)$/;"	f
